@page "/car"
@rendermode InteractiveServer
@inject IJSRuntime JS

<canvas id="car-canvas" class="car-canvas" tabindex="0"></canvas>
<div class="score-panel">
    <div id="score-display" class="score-display">Score: 0</div>
    <div id="leaderboard" class="leaderboard"></div>
</div>
<div id="reset-overlay" class="reset-overlay">
    <div class="reset-content">
        <p id="collision-text">Collision! Reset game?</p>
        <input id="name-input" placeholder="Enter your name" />
        <button id="submit-score" class="btn btn-secondary">Submit Score</button>
        <button id="reset-button" class="btn btn-primary">Reset</button>
    </div>
</div>
<script src="cargame.js"></script>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("carGame.init", "car-canvas");
        }
    }
}
